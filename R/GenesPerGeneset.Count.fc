


GenesPerGeneset.Count.fc <- function(Object, annotate =F)
{
  require(limma)
  library(AnnotationDbi)
  library(rentrez)
  
  
  clus.mol.ls <- list()
  for(clus.i in 1:max(Object@Data[[1]]$cluster))
  {
    clus.x <- Object@Data[[1]][Object@Data[[1]]$cluster == clus.i,]
    clus.x$Molecules <- as.character(clus.x$Molecules)
    clus.mol.ls[[clus.i]] <- as.vector(strsplit2(clus.x$Molecules, split = Object@metadata$seperator[1]))
    clus.mol.ls[[clus.i]] <- clus.mol.ls[[clus.i]][!clus.mol.ls[[clus.i]] == ""]
  }
  unique.mol <- unique(do.call(what = c, args = clus.mol.ls))
  unique.mol <- unique.mol[!unique.mol == ""]
  unique.mol <- unique.mol[!unique.mol == "1"]
  
  mol.unique.df <- as.data.frame(matrix(0, nrow = length(unique.mol), ncol = length(clus.mol.ls)))
  rownames(mol.unique.df) <- unique.mol
  colnames(mol.unique.df) <-  paste("Cluster_", 1:length(clus.mol.ls), sep="")
  
  
  clus.mol.vc <- do.call(what = c, args = clus.mol.ls)
  
  
  for(clus.i in 1:max(Object@Data[[1]]$cluster))
  {
    for(mol.i in 1:length(unique(clus.mol.ls[[clus.i]])))
    {
      mol.unique.df[unique(clus.mol.ls[[clus.i]])[mol.i],clus.i] <- sum(clus.mol.ls[[clus.i]] %in% unique(clus.mol.ls[[clus.i]])[mol.i])
    }
  }

  ########################################
  if(annotate == T)
  {
    require(biomaRt)
    if(Object@metadata$organism[1] == "org.Hs.eg.db")
    {
      mart <- useDataset(dataset = "hsapiens_gene_ensembl",         
                         mart    = useMart("ENSEMBL_MART_ENSEMBL", host    = "https://www.ensembl.org"))  
      resultTable <- getBM(attributes = c("hgnc_symbol", "start_position","end_position","description"),       
                           filters    = "hgnc_symbol",       
                           values     = unique.mol,         
                           mart       = mart)  
    }
    if(Object@metadata$organism[1] == "org.Mm.eg.db")
    {
      mart <- useDataset(dataset = "mmusculus_gene_ensembl",         
                         mart    = useMart("ENSEMBL_MART_ENSEMBL", host    = "https://www.ensembl.org"))  
      resultTable <- getBM(attributes = c("mgi_symbol", "start_position","end_position","description"),       
                           filters    = "mgi_symbol",       
                           values     = unique.mol,         
                           mart       = mart)  
    }
    resultTable$match <- NA
    for(i in 1:nrow(resultTable))
    {
      resultTable[i,"match"] <- which(resultTable[i,1] == unique.mol)
    }
    resultTable <- resultTable[!duplicated(resultTable$match),]
    
    resultTable2 <- as.data.frame(matrix(NA, nrow = nrow(mol.unique.df), ncol = ncol(resultTable)))
    colnames(resultTable2) <- colnames(resultTable)
    resultTable2$match <- 1:nrow(mol.unique.df)
    
    for(i in 1:nrow(resultTable))
    {
      resultTable2[resultTable2$match == resultTable[i,"match"], ] <- resultTable[i,] 
    }
    
    
    mol.unique.df <- cbind(mol.unique.df,resultTable2[,1:4])
 
  
  #########################################
  

    #############
    enterez.id <- mapIds(x = get(Object@metadata$organism[1]), 
                         keys = mol.unique.df$hgnc_symbol,
                         "ENTREZID", keytype =  'SYMBOL')
    
    enterez.id2 <- vector()
    for(i in 1:length(enterez.id))
    {
      x <- c(names(enterez.id)[i], enterez.id[[i]])
      if(is.na(x))
      {
        x <- c(NA, NA)
      }
      enterez.id2 <- rbind(enterez.id2, x)
    }
    colnames(enterez.id2) <- c("Gene", "entrez_ids")
    enterez.id2 <- as.data.frame(enterez.id2)
    enterez.id2$summary <- NA 
    
    mol.unique.df$entrez_ids <- enterez.id2[,2]
    mol.unique.df$summary <- NA
    
    Annotation.batch <- list("1" = 1:500,
                             "2" = 501:1000,
                             "3" = 1001:1500,
                             "4" = 1501:2000,
                             "5" = 2001:2500,
                             "6" = 2501:3000,
                             "7" = 3001:3500,
                             "8" = 3501:4000,
                             "9" = 4001:4500,
                             "10" = 4501:5000,
                             "11" = 5001:5500,
                             "12" = 5501:6000,
                             "13" = 6001:6500,
                             "14" = 6501:7000,
                             "15" = 7001:7500,
                             "16" = 7501:8000,
                             "17" = 8001:8500,
                             "18" = 8501:9000)
    genes.summary <- vector()
    for(num.i in 1:ceiling(nrow(mol.unique.df) / 500))
    {
      if(num.i < ceiling(nrow(mol.unique.df) / 500))
      {
        idx <- mol.unique.df[Annotation.batch[[num.i]], "entrez_ids"]
        #na.idx <- which(is.na(idx))
        idx <- idx[!is.na(idx)]
        genes <- entrez_summary(db="gene", id=idx,always_return_list=T )
        
      }
      if(num.i == ceiling(nrow(mol.unique.df) / 500))
      {
        idx <- mol.unique.df[min(Annotation.batch[[num.i]]):nrow(mol.unique.df), "entrez_ids"]
        na.idx <- which(is.na(idx))
        idx <- idx[!is.na(idx)]
        genes <- entrez_summary(db="gene", id=idx,always_return_list=T )
      }
      temp <- (extract_from_esummary(genes, "summary"))
      genes.summary <- c(genes.summary, temp)
      
      
    }
    genes.summary.df <- as.data.frame(cbind(entrez_ids = names(genes.summary), 
                                            summary = genes.summary))
    
    for(i in 1:nrow(mol.unique.df))
    {
      if(is.na(enterez.id2[i,"entrez_ids"])){next()}
      idx <- which(enterez.id2[i,"entrez_ids"] == genes.summary.df$entrez_ids)
      
      enterez.id2[i,"summary"] <- genes.summary.df[idx,"summary"]
    }
    
    mol.unique.df$summary <- enterez.id2$summary
  }
  ########################################
  return(mol.unique.df)          
}
